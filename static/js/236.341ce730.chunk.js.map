{"version":3,"file":"static/js/236.341ce730.chunk.js","mappings":"kRAuIA,EAlIqB,WACjB,IAAAA,EAAeC,EAAAA,EAAAA,UAARC,GAAsBC,EAAAA,EAAAA,GAAAH,EAAA,GAAlB,GACLI,GAAWC,EAAAA,EAAAA,MACjBC,GAA6BC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAApDC,EAASJ,EAATI,UAAWC,EAAKL,EAALK,MAgCnB,OACIC,EAAAA,EAAAA,MAACX,EAAAA,GAAIY,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAtBc,CACnBC,SAAU,CACNC,KAAM,IAEVC,WAAY,CACRD,KAAM,MAkBY,IAClBb,KAAMA,EACNe,KAAK,WACLC,SAnCS,SAAAC,GACb,IAAQF,EAAmCE,EAAnCF,KAAMG,EAA6BD,EAA7BC,MAAOC,EAAsBF,EAAtBE,SAEjBA,IAFuCF,EAAZG,UAG3BlB,GAASmB,EAAAA,EAAAA,IAAS,CAAEN,KAAAA,EAAMG,MAAAA,EAAOC,SAAAA,MAChCX,IAAcC,GAAST,EAAKsB,cAErC,EA6BQC,KAAM,UACNC,cAAe,CACXC,UAAW,CAAC,WAAY,WAAY,QACpCC,OAAQ,MAEZC,MAAO,CACHC,MAAO,KAEXC,oBAAkB,EAAAC,SAAA,EAElBC,EAAAA,EAAAA,KAAChC,EAAAA,EAAAA,KAAS,CACNgB,KAAK,QACLiB,MAAM,SACNC,MAAO,CACH,CACIC,KAAM,QACNC,QAAS,kCAEb,CACIC,UAAU,EACVD,QAAS,8BAEfL,UAEFC,EAAAA,EAAAA,KAACM,EAAAA,EAAK,OAGVN,EAAAA,EAAAA,KAAChC,EAAAA,EAAAA,KAAS,CACNgB,KAAK,WACLiB,MAAM,WACNC,MAAO,CACH,CACIG,UAAU,EACVD,QAAS,gCAGjBG,aAAW,EAAAR,UAEXC,EAAAA,EAAAA,KAACM,EAAAA,EAAAA,SAAc,OAGnBN,EAAAA,EAAAA,KAAChC,EAAAA,EAAAA,KAAS,CACNgB,KAAK,UACLiB,MAAM,mBACNO,aAAc,CAAC,YACfD,aAAW,EACXL,MAAO,CACH,CACIG,UAAU,EACVD,QAAS,iCAEb,SAAAK,GAAA,IAAGC,EAAaD,EAAbC,cAAa,MAAQ,CACpBC,UAAS,SAACC,EAAGC,GACT,OAAKA,GAASH,EAAc,cAAgBG,EAGrCC,QAAQC,OACX,IAAIC,MAAM,oDAHHF,QAAQG,SAKvB,EACH,GACHlB,UAEFC,EAAAA,EAAAA,KAACM,EAAAA,EAAAA,SAAc,OAGnBN,EAAAA,EAAAA,KAAChC,EAAAA,EAAAA,KAAS,CACNgB,KAAK,OACLiB,MAAM,OACNiB,QAAQ,uCACRhB,MAAO,CACH,CACIG,UAAU,EACVD,QAAS,0BACTe,YAAY,IAElBpB,UAEFC,EAAAA,EAAAA,KAACM,EAAAA,EAAK,OAEVN,EAAAA,EAAAA,KAAChC,EAAAA,EAAAA,MAASY,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAlGS,CACvBG,WAAY,CACRqC,GAAI,CACAtC,KAAM,GACNuC,OAAQ,GAEZC,GAAI,CACAxC,KAAM,GACNuC,OAAQ,MA0FqB,IAAAtB,UAC7BC,EAAAA,EAAAA,KAACuB,EAAAA,GAAM,CAACpB,KAAK,UAAUqB,SAAS,SAAQzB,SAAC,mBAMzD,ECjIe,SAAS0B,IACpB,OACIzB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAc,CAAA3B,UACXpB,EAAAA,EAAAA,MAAA,OAAAoB,SAAA,EACIC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAM,CAAA5B,UACHC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAEXC,EAAAA,EAAAA,KAAC4B,EAAY,QAI7B,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\n\nimport { register } from 'redux/auth/auth-operations';\nimport { Button, Form, Input } from 'antd';\n\nconst RegisterForm = () => {\n    const [form] = Form.useForm();\n    const dispatch = useDispatch();\n    const { isLoading, error } = useSelector(state => state.auth);\n\n    const onFinish = values => {\n        const { name, email, password, confirm } = values;\n\n        if (password === confirm) {\n            dispatch(register({ name, email, password }));\n            !isLoading && !error && form.resetFields();\n        }\n    };\n\n    const formItemLayout = {\n        labelCol: {\n            span: 24,\n        },\n        wrapperCol: {\n            span: 24,\n        },\n    };\n\n    const tailFormItemLayout = {\n        wrapperCol: {\n            xs: {\n                span: 24,\n                offset: 0,\n            },\n            sm: {\n                span: 16,\n                offset: 4,\n            },\n        },\n    };\n    return (\n        <Form\n            {...formItemLayout}\n            form={form}\n            name=\"register\"\n            onFinish={onFinish}\n            size={'default'}\n            initialValues={{\n                residence: ['zhejiang', 'hangzhou', 'xihu'],\n                prefix: '86',\n            }}\n            style={{\n                width: 300,\n            }}\n            scrollToFirstError\n        >\n            <Form.Item\n                name=\"email\"\n                label=\"E-mail\"\n                rules={[\n                    {\n                        type: 'email',\n                        message: 'The input is not valid E-mail!',\n                    },\n                    {\n                        required: true,\n                        message: 'Please input your E-mail!',\n                    },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n\n            <Form.Item\n                name=\"password\"\n                label=\"Password\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your password!',\n                    },\n                ]}\n                hasFeedback\n            >\n                <Input.Password />\n            </Form.Item>\n\n            <Form.Item\n                name=\"confirm\"\n                label=\"Confirm Password\"\n                dependencies={['password']}\n                hasFeedback\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please confirm your password!',\n                    },\n                    ({ getFieldValue }) => ({\n                        validator(_, value) {\n                            if (!value || getFieldValue('password') === value) {\n                                return Promise.resolve();\n                            }\n                            return Promise.reject(\n                                new Error('The new password that you entered do not match!')\n                            );\n                        },\n                    }),\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n\n            <Form.Item\n                name=\"name\"\n                label=\"Name\"\n                tooltip=\"What do you want others to call you?\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your name!',\n                        whitespace: true,\n                    },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item {...tailFormItemLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Register\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default RegisterForm;","import { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport RegisterForm from '../components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n    return (\n        <HelmetProvider>\n            <div>\n                <Helmet>\n                    <title>Registration</title>\n                </Helmet>\n                <RegisterForm />\n            </div>\n        </HelmetProvider>\n    );\n}"],"names":["_Form$useForm","Form","form","_slicedToArray","dispatch","useDispatch","_useSelector","useSelector","state","auth","isLoading","error","_jsxs","_objectSpread","labelCol","span","wrapperCol","name","onFinish","values","email","password","confirm","register","resetFields","size","initialValues","residence","prefix","style","width","scrollToFirstError","children","_jsx","label","rules","type","message","required","Input","hasFeedback","dependencies","_ref","getFieldValue","validator","_","value","Promise","reject","Error","resolve","tooltip","whitespace","xs","offset","sm","Button","htmlType","Register","HelmetProvider","Helmet","RegisterForm"],"sourceRoot":""}